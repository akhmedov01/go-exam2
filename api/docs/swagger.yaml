definitions:
  models.Branch:
    properties:
      address:
        type: string
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      phone_number:
        type: string
      updated_at:
        type: string
    type: object
  models.Category:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      parent_id:
        type: string
      updated_at:
        type: string
    type: object
  models.ComingTable:
    properties:
      branch_id:
        type: string
      coming_id:
        type: string
      created_at:
        type: string
      date_time:
        type: string
      id:
        type: string
      status:
        type: string
      updated_at:
        type: string
    type: object
  models.ComingTableProduct:
    properties:
      barcode:
        type: string
      category_id:
        type: string
      coming_table_id:
        type: string
      count:
        type: number
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
      total_price:
        type: number
      updated_at:
        type: string
    type: object
  models.CreateUpdateBranch:
    properties:
      address:
        type: string
      name:
        type: string
      phone_number:
        type: string
    type: object
  models.CreateUpdateCategory:
    properties:
      name:
        type: string
      parent_id:
        type: string
    type: object
  models.CreateUpdateComingTable:
    properties:
      branch_id:
        type: string
      coming_id:
        type: string
      date_time:
        type: string
      status:
        type: string
    type: object
  models.CreateUpdateComingTableProduct:
    properties:
      barcode:
        type: string
      category_id:
        type: string
      coming_table_id:
        type: string
      count:
        type: number
      name:
        type: string
      price:
        type: number
    type: object
  models.CreateUpdateProduct:
    properties:
      barcode:
        type: string
      category_id:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  models.CreateUpdateRemaining:
    properties:
      barcode:
        type: string
      branch_id:
        type: string
      category_id:
        type: string
      count:
        type: number
      name:
        type: string
      price:
        type: number
    type: object
  models.Product:
    properties:
      barcode:
        type: string
      category_id:
        type: string
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
      updated_at:
        type: string
    type: object
  models.Remaining:
    properties:
      barcode:
        type: string
      branch_id:
        type: string
      category_id:
        type: string
      count:
        type: number
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
      total_price:
        type: number
      updated_at:
        type: string
    type: object
  response.ErrorResp:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
info:
  contact: {}
paths:
  /branches:
    get:
      consumes:
      - application/json
      description: get Branch
      parameters:
      - default: 10
        description: limit for response
        in: query
        name: limit
        required: true
        type: integer
      - default: 1
        description: page of req
        in: query
        name: page
        required: true
        type: integer
      - description: filter by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Branch'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: List Branches
      tags:
      - BRANCH
    post:
      consumes:
      - application/json
      description: Create Branch
      parameters:
      - description: branch data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.CreateUpdateBranch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: Create Branch
      tags:
      - BRANCH
  /branches/{id}:
    delete:
      consumes:
      - application/json
      description: delete branch by ID
      parameters:
      - description: Branch ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: Delete By Id
      tags:
      - BRANCH
    get:
      consumes:
      - application/json
      description: get branch by ID
      parameters:
      - description: Branch ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Branch'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: Get By Id
      tags:
      - BRANCH
    put:
      consumes:
      - application/json
      description: api for update branch
      parameters:
      - description: id of branch
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: data of branch
        in: body
        name: branch
        required: true
        schema:
          $ref: '#/definitions/models.CreateUpdateBranch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: Update Branch
      tags:
      - BRANCH
  /categories:
    get:
      consumes:
      - application/json
      description: get category
      parameters:
      - default: 10
        description: limit for response
        in: query
        name: limit
        required: true
        type: integer
      - default: 1
        description: page of req
        in: query
        name: page
        required: true
        type: integer
      - description: filter by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Category'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: List Category
      tags:
      - CATEGORY
    post:
      consumes:
      - application/json
      description: Create Category
      parameters:
      - description: category data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.CreateUpdateCategory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: Create Category
      tags:
      - CATEGORY
  /categories/{id}:
    delete:
      consumes:
      - application/json
      description: delete category by ID
      parameters:
      - description: Category ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: Delete By Id
      tags:
      - CATEGORY
    get:
      consumes:
      - application/json
      description: get category by ID
      parameters:
      - description: Category ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: Get By Id
      tags:
      - CATEGORY
    put:
      consumes:
      - application/json
      description: api for update category
      parameters:
      - description: id of category
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: data of category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.CreateUpdateCategory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: Update Category
      tags:
      - CATEGORY
  /comingproducts:
    get:
      consumes:
      - application/json
      description: get ComingTableProduct
      parameters:
      - default: 10
        description: limit for response
        in: query
        name: limit
        required: true
        type: integer
      - default: 1
        description: page of req
        in: query
        name: page
        required: true
        type: integer
      - description: filter by name
        in: query
        name: name
        type: string
      - description: filter by barcode
        in: query
        name: barcode
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ComingTableProduct'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: List ComingTableProduct
      tags:
      - COMING_TABLE_PRODUCT
    post:
      consumes:
      - application/json
      description: Create ComingTableProduct
      parameters:
      - description: comingTableProduct data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.CreateUpdateComingTableProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: Create ComingTableProduct
      tags:
      - COMING_TABLE_PRODUCT
  /comingproducts/{id}:
    delete:
      consumes:
      - application/json
      description: delete comingTableProduct by ID
      parameters:
      - description: ComingTableProduct ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: Delete By Id
      tags:
      - COMING_TABLE_PRODUCT
    get:
      consumes:
      - application/json
      description: get comingTableProduct by ID
      parameters:
      - description: comingTableProduct ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ComingTableProduct'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: Get By Id
      tags:
      - COMING_TABLE_PRODUCT
    put:
      consumes:
      - application/json
      description: api for update comingTableProduct
      parameters:
      - description: id of comingTableProduct
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: data of comingTableProduct
        in: body
        name: coming_table_product
        required: true
        schema:
          $ref: '#/definitions/models.CreateUpdateComingTableProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: Update ComingTableProduct
      tags:
      - COMING_TABLE_PRODUCT
  /comingtables:
    get:
      consumes:
      - application/json
      description: get ComingTable
      parameters:
      - default: 10
        description: limit for response
        in: query
        name: limit
        required: true
        type: integer
      - default: 1
        description: page of req
        in: query
        name: page
        required: true
        type: integer
      - description: filter by comingId
        in: query
        name: coming_id
        type: string
      - description: filter by branchId
        in: query
        name: branch_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ComingTable'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: List ComingTable
      tags:
      - COMINGTABLE
    post:
      consumes:
      - application/json
      description: Create ComingTable
      parameters:
      - description: comingTable data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.CreateUpdateComingTable'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: Create ComingTable
      tags:
      - COMINGTABLE
  /comingtables/{id}:
    delete:
      consumes:
      - application/json
      description: delete comingTable by ID
      parameters:
      - description: ComingTable ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: Delete By Id
      tags:
      - COMINGTABLE
    get:
      consumes:
      - application/json
      description: get comingTable by ID
      parameters:
      - description: comingTable ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ComingTable'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: Get By Id
      tags:
      - COMINGTABLE
    put:
      consumes:
      - application/json
      description: api for update comingTable
      parameters:
      - description: id of comingTable
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: data of comingTable
        in: body
        name: coming_table
        required: true
        schema:
          $ref: '#/definitions/models.CreateUpdateComingTable'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: Update ComingTable
      tags:
      - COMINGTABLE
  /comingtables/scan-barcode/{id}:
    post:
      consumes:
      - application/json
      description: insert ComingTable
      parameters:
      - description: ComingTable ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - default: 1
        description: Count of Product
        in: query
        name: count
        type: number
      - description: filter by barcode
        in: query
        name: barcode
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: Post From Scan
      tags:
      - SCAN_BARCODE
  /products:
    get:
      consumes:
      - application/json
      description: get Product
      parameters:
      - default: 10
        description: limit for response
        in: query
        name: limit
        type: integer
      - default: 1
        description: page of req
        in: query
        name: page
        type: integer
      - description: filter by name
        in: query
        name: name
        type: string
      - description: filter by barcode
        in: query
        name: barcode
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: List Product
      tags:
      - PRODUCT
    post:
      consumes:
      - application/json
      description: Create Product
      parameters:
      - description: product data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.CreateUpdateProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: Create Product
      tags:
      - PRODUCT
  /products/{id}:
    delete:
      consumes:
      - application/json
      description: delete product by ID
      parameters:
      - description: Product ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: Delete By Id
      tags:
      - PRODUCT
    get:
      consumes:
      - application/json
      description: get product by ID
      parameters:
      - description: Product ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: Get By Id
      tags:
      - PRODUCT
    put:
      consumes:
      - application/json
      description: api for update product
      parameters:
      - description: id of product
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: data of product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.CreateUpdateProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: Update Product
      tags:
      - PRODUCT
  /remaining:
    get:
      consumes:
      - application/json
      description: get Remaining
      parameters:
      - default: 10
        description: limit for response
        in: query
        name: limit
        type: integer
      - default: 1
        description: page of req
        in: query
        name: page
        type: integer
      - description: filter by categorId
        in: query
        name: category_id
        type: string
      - description: filter by branchId
        in: query
        name: branch_id
        type: string
      - description: filter by barcode
        in: query
        name: barcode
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Remaining'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: List Remaining
      tags:
      - REMAINING
    post:
      consumes:
      - application/json
      description: Create Remaining
      parameters:
      - description: Remaining data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.CreateUpdateRemaining'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: Create Remaining
      tags:
      - REMAINING
  /remaining/{id}:
    delete:
      consumes:
      - application/json
      description: delete Remaining by ID
      parameters:
      - description: Remaining ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: Delete By Id
      tags:
      - REMAINING
    get:
      consumes:
      - application/json
      description: get Remaining by ID
      parameters:
      - description: Remaining ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Remaining'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: Get By Id
      tags:
      - REMAINING
    put:
      consumes:
      - application/json
      description: api for update Remaining
      parameters:
      - description: id of Remaining
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: data of Remaining
        in: body
        name: remaining
        required: true
        schema:
          $ref: '#/definitions/models.CreateUpdateRemaining'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: Update Remaining
      tags:
      - REMAINING
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
